
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nada
 */
public class MainDeshboard extends javax.swing.JFrame {
    int menu = 0;
    /**
     * Creates new form MainDeshboard
     */
    public MainDeshboard() {
        initComponents();
        this.setLocationRelativeTo(null);
        Count();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        Dasar = new javax.swing.JPanel();
        Side = new javax.swing.JPanel();
        Title = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BtnDashboard = new javax.swing.JPanel();
        LblDashboard = new javax.swing.JLabel();
        BtnTambahNsb = new javax.swing.JPanel();
        LblTambahNsb = new javax.swing.JLabel();
        BtnNTabungan = new javax.swing.JPanel();
        LblNTabungan = new javax.swing.JLabel();
        BtnDataNasabah = new javax.swing.JPanel();
        LblDataNasabah = new javax.swing.JLabel();
        BtnDataRekening = new javax.swing.JPanel();
        LblDataRekening = new javax.swing.JLabel();
        BtnDataTransaksi = new javax.swing.JPanel();
        LblDataTransaksi = new javax.swing.JLabel();
        BtnDataBank = new javax.swing.JPanel();
        LblDataBank = new javax.swing.JLabel();
        BtnDataKaryawan = new javax.swing.JPanel();
        LblDataKaryawan = new javax.swing.JLabel();
        BtnExit = new javax.swing.JPanel();
        LblExit = new javax.swing.JLabel();
        Footer = new javax.swing.JPanel();
        LblFooter = new javax.swing.JLabel();
        BtnInfo = new javax.swing.JPanel();
        LblInfo = new javax.swing.JLabel();
        TitleBar = new javax.swing.JPanel();
        Close = new javax.swing.JLabel();
        Content = new javax.swing.JPanel();
        PnlDashboard = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        CountNasabah = new javax.swing.JLabel();
        CountCabang = new javax.swing.JLabel();
        CountKaryawan = new javax.swing.JLabel();
        CountRekening = new javax.swing.JLabel();
        CountTransaksi = new javax.swing.JLabel();
        PnlNasabah = new javax.swing.JPanel();
        PnlNasabahTambah1 = new javax.swing.JPanel();
        TittleNasabah2 = new javax.swing.JLabel();
        TextNamaNasabah = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        TextNamaAlamat = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        PnlNasabahTambah2 = new javax.swing.JPanel();
        TittleNasabah3 = new javax.swing.JLabel();
        TextNasabahSaldo = new javax.swing.JTextField();
        JlabelSaldo = new javax.swing.JLabel();
        TextNasabahPIN = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        PnlNasabahTambah3 = new javax.swing.JPanel();
        TittleNasabah1 = new javax.swing.JLabel();
        ProgressBarTambahNasabah = new javax.swing.JProgressBar();
        PnlNasabahTambah4 = new javax.swing.JPanel();
        TittleNasabah5 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        TittleNasabah6 = new javax.swing.JLabel();
        PnlTabungan = new javax.swing.JPanel();
        TittleTabunga = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        TextNominal = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        ComboRekening = new javax.swing.JComboBox<>();
        ComboJenis = new javax.swing.JComboBox<>();
        BtnTransakiKirim = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        ComboKaryawan = new javax.swing.JComboBox<>();
        PnlData = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblData = new javax.swing.JTable();
        BtnAddData = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        BtnSearchData = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        TextSearchData = new javax.swing.JTextField();
        BtnRemoveData = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        BtnEditData = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        BtnRefreshData = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        PnlInfo = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();

        jScrollPane2.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Dashboard"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        Dasar.setBackground(new java.awt.Color(0, 0, 0));
        Dasar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Side.setBackground(new java.awt.Color(18, 45, 60));
        Side.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Title.setBackground(new java.awt.Color(54, 135, 194));

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Bank Mandiri");

        javax.swing.GroupLayout TitleLayout = new javax.swing.GroupLayout(Title);
        Title.setLayout(TitleLayout);
        TitleLayout.setHorizontalGroup(
            TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
        );
        TitleLayout.setVerticalGroup(
            TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        Side.add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, -1));

        BtnDashboard.setBackground(new java.awt.Color(42, 50, 55));
        BtnDashboard.setRequestFocusEnabled(false);
        BtnDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnDashboardMouseClicked(evt);
            }
        });

        LblDashboard.setBackground(new java.awt.Color(42, 50, 55));
        LblDashboard.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblDashboard.setForeground(new java.awt.Color(255, 255, 255));
        LblDashboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/dashboard_icon&32.png"))); // NOI18N
        LblDashboard.setText("  Dashboard");
        LblDashboard.setAlignmentY(0.05F);

        javax.swing.GroupLayout BtnDashboardLayout = new javax.swing.GroupLayout(BtnDashboard);
        BtnDashboard.setLayout(BtnDashboardLayout);
        BtnDashboardLayout.setHorizontalGroup(
            BtnDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnDashboardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );
        BtnDashboardLayout.setVerticalGroup(
            BtnDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LblDashboard, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        Side.add(BtnDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 220, 50));

        BtnTambahNsb.setBackground(new java.awt.Color(18, 45, 60));
        BtnTambahNsb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnTambahNsbMouseClicked(evt);
            }
        });

        LblTambahNsb.setBackground(new java.awt.Color(18, 45, 60));
        LblTambahNsb.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblTambahNsb.setForeground(new java.awt.Color(255, 255, 255));
        LblTambahNsb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/indent_increase_icon&32.png"))); // NOI18N
        LblTambahNsb.setText("  Tambah Nasabah");

        javax.swing.GroupLayout BtnTambahNsbLayout = new javax.swing.GroupLayout(BtnTambahNsb);
        BtnTambahNsb.setLayout(BtnTambahNsbLayout);
        BtnTambahNsbLayout.setHorizontalGroup(
            BtnTambahNsbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnTambahNsbLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblTambahNsb, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        BtnTambahNsbLayout.setVerticalGroup(
            BtnTambahNsbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LblTambahNsb, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        Side.add(BtnTambahNsb, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 220, 50));

        BtnNTabungan.setBackground(new java.awt.Color(18, 45, 60));
        BtnNTabungan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnNTabunganMouseClicked(evt);
            }
        });

        LblNTabungan.setBackground(new java.awt.Color(18, 45, 60));
        LblNTabungan.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblNTabungan.setForeground(new java.awt.Color(255, 255, 255));
        LblNTabungan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/notepad_icon&32.png"))); // NOI18N
        LblNTabungan.setText("  Tabungan");

        javax.swing.GroupLayout BtnNTabunganLayout = new javax.swing.GroupLayout(BtnNTabungan);
        BtnNTabungan.setLayout(BtnNTabunganLayout);
        BtnNTabunganLayout.setHorizontalGroup(
            BtnNTabunganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnNTabunganLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblNTabungan, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );
        BtnNTabunganLayout.setVerticalGroup(
            BtnNTabunganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LblNTabungan, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        Side.add(BtnNTabungan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 220, 50));

        BtnDataNasabah.setBackground(new java.awt.Color(18, 45, 60));
        BtnDataNasabah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnDataNasabahMouseClicked(evt);
            }
        });

        LblDataNasabah.setBackground(new java.awt.Color(18, 45, 60));
        LblDataNasabah.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblDataNasabah.setForeground(new java.awt.Color(255, 255, 255));
        LblDataNasabah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/user_icon&32.png"))); // NOI18N
        LblDataNasabah.setText("  Data Nasabah");

        javax.swing.GroupLayout BtnDataNasabahLayout = new javax.swing.GroupLayout(BtnDataNasabah);
        BtnDataNasabah.setLayout(BtnDataNasabahLayout);
        BtnDataNasabahLayout.setHorizontalGroup(
            BtnDataNasabahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnDataNasabahLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblDataNasabah)
                .addContainerGap(83, Short.MAX_VALUE))
        );
        BtnDataNasabahLayout.setVerticalGroup(
            BtnDataNasabahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LblDataNasabah, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        Side.add(BtnDataNasabah, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 220, 50));

        BtnDataRekening.setBackground(new java.awt.Color(18, 45, 60));
        BtnDataRekening.setPreferredSize(new java.awt.Dimension(220, 68));
        BtnDataRekening.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnDataRekeningMouseClicked(evt);
            }
        });

        LblDataRekening.setBackground(new java.awt.Color(18, 45, 60));
        LblDataRekening.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblDataRekening.setForeground(new java.awt.Color(255, 255, 255));
        LblDataRekening.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/cur_dollar_icon&32.png"))); // NOI18N
        LblDataRekening.setText("  Data Rekening");

        javax.swing.GroupLayout BtnDataRekeningLayout = new javax.swing.GroupLayout(BtnDataRekening);
        BtnDataRekening.setLayout(BtnDataRekeningLayout);
        BtnDataRekeningLayout.setHorizontalGroup(
            BtnDataRekeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnDataRekeningLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblDataRekening, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        BtnDataRekeningLayout.setVerticalGroup(
            BtnDataRekeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BtnDataRekeningLayout.createSequentialGroup()
                .addComponent(LblDataRekening, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Side.add(BtnDataRekening, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 220, 50));

        BtnDataTransaksi.setBackground(new java.awt.Color(18, 45, 60));
        BtnDataTransaksi.setPreferredSize(new java.awt.Dimension(220, 68));
        BtnDataTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnDataTransaksiMouseClicked(evt);
            }
        });

        LblDataTransaksi.setBackground(new java.awt.Color(18, 45, 60));
        LblDataTransaksi.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblDataTransaksi.setForeground(new java.awt.Color(255, 255, 255));
        LblDataTransaksi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/chart_bar_icon&32.png"))); // NOI18N
        LblDataTransaksi.setText("  Data Transaksi");

        javax.swing.GroupLayout BtnDataTransaksiLayout = new javax.swing.GroupLayout(BtnDataTransaksi);
        BtnDataTransaksi.setLayout(BtnDataTransaksiLayout);
        BtnDataTransaksiLayout.setHorizontalGroup(
            BtnDataTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnDataTransaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblDataTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        BtnDataTransaksiLayout.setVerticalGroup(
            BtnDataTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LblDataTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        Side.add(BtnDataTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 220, 50));

        BtnDataBank.setBackground(new java.awt.Color(18, 45, 60));
        BtnDataBank.setPreferredSize(new java.awt.Dimension(220, 68));
        BtnDataBank.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnDataBankMouseClicked(evt);
            }
        });

        LblDataBank.setBackground(new java.awt.Color(18, 45, 60));
        LblDataBank.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblDataBank.setForeground(new java.awt.Color(255, 255, 255));
        LblDataBank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/home_icon&32.png"))); // NOI18N
        LblDataBank.setText("  Data Cabang Bank");

        javax.swing.GroupLayout BtnDataBankLayout = new javax.swing.GroupLayout(BtnDataBank);
        BtnDataBank.setLayout(BtnDataBankLayout);
        BtnDataBankLayout.setHorizontalGroup(
            BtnDataBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnDataBankLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblDataBank, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        BtnDataBankLayout.setVerticalGroup(
            BtnDataBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BtnDataBankLayout.createSequentialGroup()
                .addComponent(LblDataBank, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Side.add(BtnDataBank, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 220, 50));

        BtnDataKaryawan.setBackground(new java.awt.Color(18, 45, 60));
        BtnDataKaryawan.setPreferredSize(new java.awt.Dimension(220, 68));
        BtnDataKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnDataKaryawanMouseClicked(evt);
            }
        });

        LblDataKaryawan.setBackground(new java.awt.Color(18, 45, 60));
        LblDataKaryawan.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblDataKaryawan.setForeground(new java.awt.Color(255, 255, 255));
        LblDataKaryawan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/contact_card_icon&32.png"))); // NOI18N
        LblDataKaryawan.setText("  Data Karyawan");

        javax.swing.GroupLayout BtnDataKaryawanLayout = new javax.swing.GroupLayout(BtnDataKaryawan);
        BtnDataKaryawan.setLayout(BtnDataKaryawanLayout);
        BtnDataKaryawanLayout.setHorizontalGroup(
            BtnDataKaryawanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnDataKaryawanLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(LblDataKaryawan)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        BtnDataKaryawanLayout.setVerticalGroup(
            BtnDataKaryawanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BtnDataKaryawanLayout.createSequentialGroup()
                .addComponent(LblDataKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Side.add(BtnDataKaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 220, 50));

        BtnExit.setBackground(new java.awt.Color(18, 45, 60));
        BtnExit.setPreferredSize(new java.awt.Dimension(220, 68));

        LblExit.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblExit.setForeground(new java.awt.Color(255, 255, 255));
        LblExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/on-off_icon&32.png"))); // NOI18N
        LblExit.setText("  Exit");
        LblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LblExitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout BtnExitLayout = new javax.swing.GroupLayout(BtnExit);
        BtnExit.setLayout(BtnExitLayout);
        BtnExitLayout.setHorizontalGroup(
            BtnExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnExitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblExit, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        BtnExitLayout.setVerticalGroup(
            BtnExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LblExit, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        Side.add(BtnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 220, 50));

        Footer.setBackground(new java.awt.Color(204, 204, 255));

        LblFooter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblFooter.setText("By Faris");

        javax.swing.GroupLayout FooterLayout = new javax.swing.GroupLayout(Footer);
        Footer.setLayout(FooterLayout);
        FooterLayout.setHorizontalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LblFooter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
        );
        FooterLayout.setVerticalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblFooter, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
        );

        Side.add(Footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 570, 220, 30));

        BtnInfo.setBackground(new java.awt.Color(18, 45, 60));
        BtnInfo.setPreferredSize(new java.awt.Dimension(220, 68));
        BtnInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnInfoMouseClicked(evt);
            }
        });

        LblInfo.setBackground(new java.awt.Color(18, 45, 60));
        LblInfo.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        LblInfo.setForeground(new java.awt.Color(255, 255, 255));
        LblInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/info_icon&32.png"))); // NOI18N
        LblInfo.setText("  About");

        javax.swing.GroupLayout BtnInfoLayout = new javax.swing.GroupLayout(BtnInfo);
        BtnInfo.setLayout(BtnInfoLayout);
        BtnInfoLayout.setHorizontalGroup(
            BtnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LblInfo)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        BtnInfoLayout.setVerticalGroup(
            BtnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LblInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        Side.add(BtnInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 220, 50));

        Dasar.add(Side, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 600));

        TitleBar.setBackground(new java.awt.Color(32, 38, 41));
        TitleBar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/delete_icon&24.png"))); // NOI18N
        Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseMouseClicked(evt);
            }
        });
        TitleBar.add(Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, -1, -1));

        Dasar.add(TitleBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 670, 60));

        Content.setMinimumSize(new java.awt.Dimension(55, 55));
        Content.setName(""); // NOI18N
        Content.setLayout(new java.awt.CardLayout());

        PnlDashboard.setBackground(new java.awt.Color(122, 122, 122));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/cur_dollar_icon&48.png"))); // NOI18N
        jLabel10.setText(" Rekening = ");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/user_icon&48.png"))); // NOI18N
        jLabel11.setText(" Nasabah =");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/contact_card_icon&48.png"))); // NOI18N
        jLabel12.setText(" Karyawan = ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/home_icon&48.png"))); // NOI18N
        jLabel16.setText(" Cabang =");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/chart_bar_icon&48.png"))); // NOI18N
        jLabel17.setText(" Transaksi =");

        CountNasabah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CountNasabah.setForeground(new java.awt.Color(255, 255, 255));
        CountNasabah.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        CountNasabah.setText("0");

        CountCabang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CountCabang.setForeground(new java.awt.Color(255, 255, 255));
        CountCabang.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        CountCabang.setText("0");

        CountKaryawan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CountKaryawan.setForeground(new java.awt.Color(255, 255, 255));
        CountKaryawan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        CountKaryawan.setText("0");

        CountRekening.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CountRekening.setForeground(new java.awt.Color(255, 255, 255));
        CountRekening.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        CountRekening.setText("0");

        CountTransaksi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CountTransaksi.setForeground(new java.awt.Color(255, 255, 255));
        CountTransaksi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        CountTransaksi.setText("0");

        javax.swing.GroupLayout PnlDashboardLayout = new javax.swing.GroupLayout(PnlDashboard);
        PnlDashboard.setLayout(PnlDashboardLayout);
        PnlDashboardLayout.setHorizontalGroup(
            PnlDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlDashboardLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(PnlDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlDashboardLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(CountNasabah))
                    .addGroup(PnlDashboardLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CountCabang)))
                .addGap(80, 80, 80)
                .addGroup(PnlDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlDashboardLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CountRekening))
                    .addGroup(PnlDashboardLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(CountKaryawan)))
                .addGap(75, 75, 75))
            .addGroup(PnlDashboardLayout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(jLabel17)
                .addGap(79, 79, 79)
                .addComponent(CountTransaksi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PnlDashboardLayout.setVerticalGroup(
            PnlDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlDashboardLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(PnlDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(CountNasabah)
                    .addComponent(CountRekening))
                .addGap(69, 69, 69)
                .addGroup(PnlDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(CountCabang)
                    .addComponent(CountKaryawan)
                    .addComponent(jLabel16))
                .addGap(75, 75, 75)
                .addGroup(PnlDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(CountTransaksi))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        Content.add(PnlDashboard, "card2");

        PnlNasabah.setBackground(new java.awt.Color(122, 122, 122));
        PnlNasabah.setLayout(new java.awt.CardLayout());

        PnlNasabahTambah1.setBackground(new java.awt.Color(122, 122, 122));

        TittleNasabah2.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        TittleNasabah2.setForeground(new java.awt.Color(255, 255, 255));
        TittleNasabah2.setText("Tambah Nasabah");

        TextNamaNasabah.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Nama Lengkap");

        TextNamaAlamat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Alamat Lengkap");

        jPanel3.setOpaque(false);
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/arrow_right_icon&48.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setOpaque(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 68, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PnlNasabahTambah1Layout = new javax.swing.GroupLayout(PnlNasabahTambah1);
        PnlNasabahTambah1.setLayout(PnlNasabahTambah1Layout);
        PnlNasabahTambah1Layout.setHorizontalGroup(
            PnlNasabahTambah1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlNasabahTambah1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(PnlNasabahTambah1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlNasabahTambah1Layout.createSequentialGroup()
                        .addComponent(TittleNasabah2)
                        .addContainerGap(399, Short.MAX_VALUE))
                    .addGroup(PnlNasabahTambah1Layout.createSequentialGroup()
                        .addGroup(PnlNasabahTambah1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PnlNasabahTambah1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextNamaAlamat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextNamaNasabah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85))))
        );
        PnlNasabahTambah1Layout.setVerticalGroup(
            PnlNasabahTambah1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlNasabahTambah1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(TittleNasabah2)
                .addGroup(PnlNasabahTambah1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlNasabahTambah1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel13))
                    .addGroup(PnlNasabahTambah1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(TextNamaNasabah, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PnlNasabahTambah1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextNamaAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addGroup(PnlNasabahTambah1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96))
        );

        PnlNasabah.add(PnlNasabahTambah1, "card2");

        PnlNasabahTambah2.setBackground(new java.awt.Color(122, 122, 122));

        TittleNasabah3.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        TittleNasabah3.setForeground(new java.awt.Color(255, 255, 255));
        TittleNasabah3.setText("Tambah Nasabah");

        TextNasabahSaldo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        JlabelSaldo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JlabelSaldo.setForeground(new java.awt.Color(255, 255, 255));
        JlabelSaldo.setText("Saldo");

        TextNasabahPIN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("PIN");

        jPanel7.setOpaque(false);
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/import_icon&48.png"))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel8.setOpaque(false);
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/arrow_left_icon&48.png"))); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PnlNasabahTambah2Layout = new javax.swing.GroupLayout(PnlNasabahTambah2);
        PnlNasabahTambah2.setLayout(PnlNasabahTambah2Layout);
        PnlNasabahTambah2Layout.setHorizontalGroup(
            PnlNasabahTambah2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlNasabahTambah2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(PnlNasabahTambah2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlNasabahTambah2Layout.createSequentialGroup()
                        .addComponent(TittleNasabah3)
                        .addContainerGap(399, Short.MAX_VALUE))
                    .addGroup(PnlNasabahTambah2Layout.createSequentialGroup()
                        .addGroup(PnlNasabahTambah2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JlabelSaldo)
                            .addComponent(jLabel18)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PnlNasabahTambah2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextNasabahPIN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextNasabahSaldo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85))))
        );
        PnlNasabahTambah2Layout.setVerticalGroup(
            PnlNasabahTambah2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlNasabahTambah2Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(TittleNasabah3)
                .addGroup(PnlNasabahTambah2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlNasabahTambah2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(JlabelSaldo))
                    .addGroup(PnlNasabahTambah2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(TextNasabahSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PnlNasabahTambah2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextNasabahPIN, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addGroup(PnlNasabahTambah2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96))
        );

        PnlNasabah.add(PnlNasabahTambah2, "card2");

        PnlNasabahTambah3.setBackground(new java.awt.Color(122, 122, 122));

        TittleNasabah1.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        TittleNasabah1.setForeground(new java.awt.Color(255, 255, 255));
        TittleNasabah1.setText("Tambah Nasabah");

        ProgressBarTambahNasabah.setBackground(new java.awt.Color(102, 102, 102));
        ProgressBarTambahNasabah.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout PnlNasabahTambah3Layout = new javax.swing.GroupLayout(PnlNasabahTambah3);
        PnlNasabahTambah3.setLayout(PnlNasabahTambah3Layout);
        PnlNasabahTambah3Layout.setHorizontalGroup(
            PnlNasabahTambah3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlNasabahTambah3Layout.createSequentialGroup()
                .addGroup(PnlNasabahTambah3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlNasabahTambah3Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(TittleNasabah1))
                    .addGroup(PnlNasabahTambah3Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(ProgressBarTambahNasabah, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        PnlNasabahTambah3Layout.setVerticalGroup(
            PnlNasabahTambah3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlNasabahTambah3Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(TittleNasabah1)
                .addGap(125, 125, 125)
                .addComponent(ProgressBarTambahNasabah, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(254, Short.MAX_VALUE))
        );

        PnlNasabah.add(PnlNasabahTambah3, "card2");

        PnlNasabahTambah4.setBackground(new java.awt.Color(122, 122, 122));

        TittleNasabah5.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        TittleNasabah5.setForeground(new java.awt.Color(255, 255, 255));
        TittleNasabah5.setText("Tambah Nasabah");

        jPanel10.setOpaque(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 68, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        jPanel11.setOpaque(false);
        jPanel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel11MouseClicked(evt);
            }
        });

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/arrow_left_icon&48.png"))); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TittleNasabah6.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        TittleNasabah6.setForeground(new java.awt.Color(255, 255, 255));
        TittleNasabah6.setText("Registrasi Nasabah Telah Berhasil ");

        javax.swing.GroupLayout PnlNasabahTambah4Layout = new javax.swing.GroupLayout(PnlNasabahTambah4);
        PnlNasabahTambah4.setLayout(PnlNasabahTambah4Layout);
        PnlNasabahTambah4Layout.setHorizontalGroup(
            PnlNasabahTambah4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlNasabahTambah4Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(PnlNasabahTambah4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlNasabahTambah4Layout.createSequentialGroup()
                        .addComponent(TittleNasabah5)
                        .addContainerGap(399, Short.MAX_VALUE))
                    .addGroup(PnlNasabahTambah4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))))
            .addGroup(PnlNasabahTambah4Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(TittleNasabah6)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PnlNasabahTambah4Layout.setVerticalGroup(
            PnlNasabahTambah4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlNasabahTambah4Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(TittleNasabah5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                .addComponent(TittleNasabah6)
                .addGap(98, 98, 98)
                .addGroup(PnlNasabahTambah4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96))
        );

        PnlNasabah.add(PnlNasabahTambah4, "card2");

        Content.add(PnlNasabah, "card2");

        PnlTabungan.setBackground(new java.awt.Color(122, 122, 122));
        PnlTabungan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TittleTabunga.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        TittleTabunga.setForeground(new java.awt.Color(255, 255, 255));
        TittleTabunga.setText("Tabungan");
        PnlTabungan.add(TittleTabunga, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 76, -1, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("No Rekening");
        PnlTabungan.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 236, -1, -1));

        TextNominal.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        PnlTabungan.add(TextNominal, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, 199, 32));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Nominal");
        PnlTabungan.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Jenis Transaksi");
        PnlTabungan.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 178, -1, -1));

        PnlTabungan.add(ComboRekening, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 226, 199, 40));

        ComboJenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Menabung", "Mengambil" }));
        PnlTabungan.add(ComboJenis, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 168, 199, 40));

        BtnTransakiKirim.setBackground(new java.awt.Color(102, 102, 102));
        BtnTransakiKirim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnTransakiKirimMouseClicked(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Kirim");

        javax.swing.GroupLayout BtnTransakiKirimLayout = new javax.swing.GroupLayout(BtnTransakiKirim);
        BtnTransakiKirim.setLayout(BtnTransakiKirimLayout);
        BtnTransakiKirimLayout.setHorizontalGroup(
            BtnTransakiKirimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnTransakiKirimLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel24)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        BtnTransakiKirimLayout.setVerticalGroup(
            BtnTransakiKirimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnTransakiKirimLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel24)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        PnlTabungan.add(BtnTransakiKirim, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 413, -1, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Id Karywan");
        PnlTabungan.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 291, -1, -1));

        PnlTabungan.add(ComboKaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 281, 199, 40));

        Content.add(PnlTabungan, "card2");

        PnlData.setBackground(new java.awt.Color(122, 122, 122));
        PnlData.setPreferredSize(new java.awt.Dimension(670, 540));

        TblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TblData.setColumnSelectionAllowed(true);
        TblData.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TblData);
        TblData.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        BtnAddData.setBackground(new java.awt.Color(51, 51, 51));
        BtnAddData.setPreferredSize(new java.awt.Dimension(84, 38));
        BtnAddData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnAddDataMouseClicked(evt);
            }
        });
        BtnAddData.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/round_plus_icon&16.png"))); // NOI18N
        jLabel3.setText("Tambah");
        BtnAddData.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        BtnSearchData.setBackground(new java.awt.Color(51, 51, 51));
        BtnSearchData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnSearchDataMouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/zoom_icon&16.png"))); // NOI18N

        javax.swing.GroupLayout BtnSearchDataLayout = new javax.swing.GroupLayout(BtnSearchData);
        BtnSearchData.setLayout(BtnSearchDataLayout);
        BtnSearchDataLayout.setHorizontalGroup(
            BtnSearchDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnSearchDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BtnSearchDataLayout.setVerticalGroup(
            BtnSearchDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnSearchDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BtnRemoveData.setBackground(new java.awt.Color(51, 51, 51));
        BtnRemoveData.setPreferredSize(new java.awt.Dimension(84, 38));
        BtnRemoveData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnRemoveDataMouseClicked(evt);
            }
        });
        BtnRemoveData.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/round_minus_icon&16.png"))); // NOI18N
        jLabel5.setText("Hapus");
        BtnRemoveData.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        BtnEditData.setBackground(new java.awt.Color(51, 51, 51));
        BtnEditData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnEditDataMouseClicked(evt);
            }
        });
        BtnEditData.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/round_icon&16.png"))); // NOI18N
        jLabel6.setText("Edit");
        BtnEditData.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        BtnRefreshData.setBackground(new java.awt.Color(51, 51, 51));
        BtnRefreshData.setPreferredSize(new java.awt.Dimension(84, 38));
        BtnRefreshData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnRefreshDataMouseClicked(evt);
            }
        });
        BtnRefreshData.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/reload_icon&16.png"))); // NOI18N
        jLabel9.setText("Refresh");
        BtnRefreshData.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        javax.swing.GroupLayout PnlDataLayout = new javax.swing.GroupLayout(PnlData);
        PnlData.setLayout(PnlDataLayout);
        PnlDataLayout.setHorizontalGroup(
            PnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlDataLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PnlDataLayout.createSequentialGroup()
                        .addComponent(TextSearchData, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnSearchData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlDataLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnRefreshData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnAddData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnEditData, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnRemoveData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );
        PnlDataLayout.setVerticalGroup(
            PnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlDataLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(PnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TextSearchData)
                    .addComponent(BtnSearchData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(BtnRemoveData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnAddData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnRefreshData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnEditData, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(435, 435, 435))
        );

        Content.add(PnlData, "card2");

        PnlInfo.setBackground(new java.awt.Color(122, 122, 122));

        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Aplikasi ini di buat untuk Tugas UAS mata kuliah \"SISTEM DATABASE\" dosen Udkhiati Mawaddah,S.Kom.");

        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Jika terdapat banyak  error saya mohon maaf ");

        javax.swing.GroupLayout PnlInfoLayout = new javax.swing.GroupLayout(PnlInfo);
        PnlInfo.setLayout(PnlInfoLayout);
        PnlInfoLayout.setHorizontalGroup(
            PnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlInfoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(PnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(jLabel26))
                .addContainerGap(315, Short.MAX_VALUE))
        );
        PnlInfoLayout.setVerticalGroup(
            PnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlInfoLayout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addContainerGap(361, Short.MAX_VALUE))
        );

        Content.add(PnlInfo, "card2");

        Dasar.add(Content, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 670, 540));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Dasar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Dasar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_CloseMouseClicked

    private void LblExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LblExitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_LblExitMouseClicked

    private void BtnSearchDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnSearchDataMouseClicked
        if (menu == 0){
            SearchDataNasabah();
        } else if ( menu == 1){
            SearchDataRekening();
        } else if(menu == 2){
            SearchDataTransaksi();
        } else if ( menu == 3){
            SearchDataCabang();
        } else if(menu == 4){
            SearchDataKaryawan();
        }        
    }//GEN-LAST:event_BtnSearchDataMouseClicked

    private void BtnRefreshDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnRefreshDataMouseClicked
        if (menu == 0){
            GetDataNasabah();
        } else if ( menu == 1){
            GetDataRekening();
        } else if(menu == 2){
            GetDataTransaksi();
        } else if ( menu == 3){
            GetDataCabang();
        } else if(menu == 4){
            GetDataKaryawan();
        }
    }//GEN-LAST:event_BtnRefreshDataMouseClicked

    private void BtnAddDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnAddDataMouseClicked
        if (menu == 0){
            TambahDataNasabah();
            GetDataNasabah();
        } else if ( menu == 1){
            TambahDataRekening();
            GetDataRekening();
        } else if(menu == 2){
            TambahDataTransaksi();
            GetDataTransaksi();
        } else if ( menu == 3){
            TambahDataCabang();
            GetDataCabang();
        } else if(menu == 4){
            TambahDataKaryawan();
            GetDataKaryawan();
        }        
    }//GEN-LAST:event_BtnAddDataMouseClicked

    private void BtnEditDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnEditDataMouseClicked
        if (menu == 0){
            EditDataNasabah();
            GetDataNasabah();
        } else if ( menu == 1){
            EditDataRekening();
            GetDataRekening();
        } else if(menu == 2){
            EditDataTransaksi();
            GetDataTransaksi();
        } else if ( menu == 3){
            EditDataCabang();
            GetDataCabang();
        } else if(menu == 4){
            EditDataKaryawan();
            GetDataKaryawan();
        }
    }//GEN-LAST:event_BtnEditDataMouseClicked

    private void BtnRemoveDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnRemoveDataMouseClicked
        if (menu == 0){
            HapusDataNasabah();
            GetDataNasabah();
        } else if ( menu == 1){
            HapusDataRekening();
            GetDataRekening();
        } else if(menu == 2){
            HapusDataTransaksi();
            GetDataTransaksi();
        } else if ( menu == 3){
            HapusDataCabang();
            GetDataCabang();
        } else if(menu == 4){
            HapusDataKaryawan();
            GetDataKaryawan();
        }
    }//GEN-LAST:event_BtnRemoveDataMouseClicked

    private void BtnDashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnDashboardMouseClicked
        Count();
        BtnDashboard.setBackground(new java.awt.Color(42,50,55));
        BtnTambahNsb.setBackground(new java.awt.Color(18,45,60));
        BtnNTabungan.setBackground(new java.awt.Color(18,45,60));
        BtnDataNasabah.setBackground(new java.awt.Color(18,45,60));
        BtnDataRekening.setBackground(new java.awt.Color(18,45,60));
        BtnDataTransaksi.setBackground(new java.awt.Color(18,45,60));
        BtnDataBank.setBackground(new java.awt.Color(18,45,60));
        BtnDataKaryawan.setBackground(new java.awt.Color(18,45,60));
        BtnInfo.setBackground(new java.awt.Color(18,45,60));
        PnlDashboard.setVisible(true);
        PnlNasabah.setVisible(false);
        PnlTabungan.setVisible(false);
        PnlData.setVisible(false);
        PnlInfo.setVisible(false);
    }//GEN-LAST:event_BtnDashboardMouseClicked

    private void BtnTambahNsbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnTambahNsbMouseClicked
        BtnDashboard.setBackground(new java.awt.Color(18,45,60));
        BtnTambahNsb.setBackground(new java.awt.Color(42,50,55));
        BtnNTabungan.setBackground(new java.awt.Color(18,45,60));
        BtnDataNasabah.setBackground(new java.awt.Color(18,45,60));
        BtnDataRekening.setBackground(new java.awt.Color(18,45,60));
        BtnDataTransaksi.setBackground(new java.awt.Color(18,45,60));
        BtnDataBank.setBackground(new java.awt.Color(18,45,60));
        BtnDataKaryawan.setBackground(new java.awt.Color(18,45,60));
        BtnInfo.setBackground(new java.awt.Color(18,45,60));
        PnlDashboard.setVisible(false);
        PnlNasabah.setVisible(true);
        PnlTabungan.setVisible(false);
        PnlData.setVisible(false);
        PnlInfo.setVisible(false);
    }//GEN-LAST:event_BtnTambahNsbMouseClicked

    private void BtnNTabunganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnNTabunganMouseClicked
        BtnDashboard.setBackground(new java.awt.Color(18,45,60));
        BtnTambahNsb.setBackground(new java.awt.Color(18,45,60));
        BtnNTabungan.setBackground(new java.awt.Color(42,50,55));
        BtnDataNasabah.setBackground(new java.awt.Color(18,45,60));
        BtnDataRekening.setBackground(new java.awt.Color(18,45,60));
        BtnDataTransaksi.setBackground(new java.awt.Color(18,45,60));
        BtnDataBank.setBackground(new java.awt.Color(18,45,60));
        BtnDataKaryawan.setBackground(new java.awt.Color(18,45,60));
        BtnInfo.setBackground(new java.awt.Color(18,45,60));
        PnlDashboard.setVisible(false);
        PnlNasabah.setVisible(false);
        PnlTabungan.setVisible(true);
        PnlData.setVisible(false);
        PnlInfo.setVisible(false);
        ComboTabungan();
    }//GEN-LAST:event_BtnNTabunganMouseClicked

    private void BtnDataNasabahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnDataNasabahMouseClicked
        BtnDashboard.setBackground(new java.awt.Color(18,45,60));
        BtnTambahNsb.setBackground(new java.awt.Color(18,45,60));
        BtnNTabungan.setBackground(new java.awt.Color(18,45,60));
        BtnDataNasabah.setBackground(new java.awt.Color(42,50,55));
        BtnDataRekening.setBackground(new java.awt.Color(18,45,60));
        BtnDataTransaksi.setBackground(new java.awt.Color(18,45,60));
        BtnDataBank.setBackground(new java.awt.Color(18,45,60));
        BtnDataKaryawan.setBackground(new java.awt.Color(18,45,60));
        BtnInfo.setBackground(new java.awt.Color(18,45,60));
        PnlDashboard.setVisible(false);
        PnlNasabah.setVisible(false);
        PnlTabungan.setVisible(false);
        PnlData.setVisible(true);
        PnlInfo.setVisible(false);
        menu = 0;
        GetDataNasabah();
    }//GEN-LAST:event_BtnDataNasabahMouseClicked

    private void BtnDataRekeningMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnDataRekeningMouseClicked
        BtnDashboard.setBackground(new java.awt.Color(18,45,60));
        BtnTambahNsb.setBackground(new java.awt.Color(18,45,60));
        BtnNTabungan.setBackground(new java.awt.Color(18,45,60));
        BtnDataNasabah.setBackground(new java.awt.Color(18,45,60));
        BtnDataRekening.setBackground(new java.awt.Color(42,50,55));
        BtnDataTransaksi.setBackground(new java.awt.Color(18,45,60));
        BtnDataBank.setBackground(new java.awt.Color(18,45,60));
        BtnDataKaryawan.setBackground(new java.awt.Color(18,45,60));
        BtnInfo.setBackground(new java.awt.Color(18,45,60));
        PnlDashboard.setVisible(false);
        PnlNasabah.setVisible(false);
        PnlTabungan.setVisible(false);
        PnlData.setVisible(true);
        PnlInfo.setVisible(false);
        menu = 1;
        GetDataRekening();
    }//GEN-LAST:event_BtnDataRekeningMouseClicked

    private void BtnDataTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnDataTransaksiMouseClicked
        BtnDashboard.setBackground(new java.awt.Color(18,45,60));
        BtnTambahNsb.setBackground(new java.awt.Color(18,45,60));
        BtnNTabungan.setBackground(new java.awt.Color(18,45,60));
        BtnDataNasabah.setBackground(new java.awt.Color(18,45,60));
        BtnDataRekening.setBackground(new java.awt.Color(18,45,60));
        BtnDataTransaksi.setBackground(new java.awt.Color(42,50,55));
        BtnDataBank.setBackground(new java.awt.Color(18,45,60));
        BtnDataKaryawan.setBackground(new java.awt.Color(18,45,60));
        BtnInfo.setBackground(new java.awt.Color(18,45,60));
        PnlDashboard.setVisible(false);
        PnlNasabah.setVisible(false);
        PnlTabungan.setVisible(false);
        PnlData.setVisible(true);
        PnlInfo.setVisible(false);
        menu = 2;
        GetDataTransaksi();
    }//GEN-LAST:event_BtnDataTransaksiMouseClicked

    private void BtnDataBankMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnDataBankMouseClicked
        BtnDashboard.setBackground(new java.awt.Color(18,45,60));
        BtnTambahNsb.setBackground(new java.awt.Color(18,45,60));
        BtnNTabungan.setBackground(new java.awt.Color(18,45,60));
        BtnDataNasabah.setBackground(new java.awt.Color(18,45,60));
        BtnDataRekening.setBackground(new java.awt.Color(18,45,60));
        BtnDataTransaksi.setBackground(new java.awt.Color(18,45,60));
        BtnDataBank.setBackground(new java.awt.Color(42,50,55));
        BtnDataKaryawan.setBackground(new java.awt.Color(18,45,60));
        BtnInfo.setBackground(new java.awt.Color(18,45,60));
        PnlDashboard.setVisible(false);
        PnlNasabah.setVisible(false);
        PnlTabungan.setVisible(false);
        PnlData.setVisible(true);
        PnlInfo.setVisible(false);
        menu = 3;
        GetDataCabang();
    }//GEN-LAST:event_BtnDataBankMouseClicked

    private void BtnDataKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnDataKaryawanMouseClicked
        BtnDashboard.setBackground(new java.awt.Color(18,45,60));
        BtnTambahNsb.setBackground(new java.awt.Color(18,45,60));
        BtnNTabungan.setBackground(new java.awt.Color(18,45,60));
        BtnDataNasabah.setBackground(new java.awt.Color(18,45,60));
        BtnDataRekening.setBackground(new java.awt.Color(18,45,60));
        BtnDataTransaksi.setBackground(new java.awt.Color(18,45,60));
        BtnDataBank.setBackground(new java.awt.Color(18,45,60));
        BtnDataKaryawan.setBackground(new java.awt.Color(42,50,55));
        BtnInfo.setBackground(new java.awt.Color(18,45,60));
        PnlDashboard.setVisible(false);
        PnlNasabah.setVisible(false);
        PnlTabungan.setVisible(false);
        PnlData.setVisible(true);
        PnlInfo.setVisible(false);
        menu = 4;
        GetDataKaryawan();
    }//GEN-LAST:event_BtnDataKaryawanMouseClicked

    private void BtnInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnInfoMouseClicked
       BtnDashboard.setBackground(new java.awt.Color(18,45,60));
        BtnTambahNsb.setBackground(new java.awt.Color(18,45,60));
        BtnNTabungan.setBackground(new java.awt.Color(18,45,60));
        BtnDataNasabah.setBackground(new java.awt.Color(18,45,60));
        BtnDataRekening.setBackground(new java.awt.Color(18,45,60));
        BtnDataTransaksi.setBackground(new java.awt.Color(18,45,60));
        BtnDataBank.setBackground(new java.awt.Color(18,45,60));
        BtnDataKaryawan.setBackground(new java.awt.Color(18,45,60));
        BtnInfo.setBackground(new java.awt.Color(42,50,55));        
        PnlDashboard.setVisible(false);
        PnlNasabah.setVisible(false);
        PnlTabungan.setVisible(false);
        PnlData.setVisible(false);
        PnlInfo.setVisible(true);
    }//GEN-LAST:event_BtnInfoMouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        if ((TextNamaNasabah.getText().isEmpty() != true) || (TextNamaAlamat.getText().isEmpty() != true)) {            
            PnlNasabahTambah1.setVisible(false);
            PnlNasabahTambah2.setVisible(true);
            PnlNasabahTambah3.setVisible(false);
            PnlNasabahTambah4.setVisible(false);
        } else {
             JOptionPane.showMessageDialog(this, "Data Tidak boleh kosong", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
        }
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        PnlNasabahTambah1.setVisible(true);
        PnlNasabahTambah2.setVisible(false);
        PnlNasabahTambah3.setVisible(false);
        PnlNasabahTambah4.setVisible(false);
    }//GEN-LAST:event_jPanel8MouseClicked

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked
        if ((TextNasabahPIN.getText().isEmpty() != true) || (TextNasabahSaldo.getText().isEmpty() != true)) {    
            if (TextNasabahPIN.getText().length()<=4){
            PnlNasabahTambah1.setVisible(false);
            PnlNasabahTambah2.setVisible(false);
            PnlNasabahTambah3.setVisible(true);
            PnlNasabahTambah4.setVisible(false);
            NasabahBuat();
            } else {
                JOptionPane.showMessageDialog(this, "PIN Max 4 angka", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
            }
        } else {
             JOptionPane.showMessageDialog(this, "Data Tidak boleh kosong", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
        }
    }//GEN-LAST:event_jPanel7MouseClicked

    private void jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseClicked
        PnlNasabahTambah1.setVisible(true);
        PnlNasabahTambah2.setVisible(false);
        PnlNasabahTambah3.setVisible(false);
        PnlNasabahTambah4.setVisible(false);
    }//GEN-LAST:event_jPanel11MouseClicked

    private void BtnTransakiKirimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnTransakiKirimMouseClicked
        if ((ComboJenis.getSelectedItem() != null)||(ComboRekening.getSelectedItem() != null)|| (TextNominal.getText().isEmpty() != true)) {
            KirimTabungan();
        } else {
             JOptionPane.showMessageDialog(this, "Data Tidak boleh kosong", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
        }
    }//GEN-LAST:event_BtnTransakiKirimMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainDeshboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainDeshboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainDeshboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainDeshboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainDeshboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BtnAddData;
    private javax.swing.JPanel BtnDashboard;
    private javax.swing.JPanel BtnDataBank;
    private javax.swing.JPanel BtnDataKaryawan;
    private javax.swing.JPanel BtnDataNasabah;
    private javax.swing.JPanel BtnDataRekening;
    private javax.swing.JPanel BtnDataTransaksi;
    private javax.swing.JPanel BtnEditData;
    private javax.swing.JPanel BtnExit;
    private javax.swing.JPanel BtnInfo;
    private javax.swing.JPanel BtnNTabungan;
    private javax.swing.JPanel BtnRefreshData;
    private javax.swing.JPanel BtnRemoveData;
    private javax.swing.JPanel BtnSearchData;
    private javax.swing.JPanel BtnTambahNsb;
    private javax.swing.JPanel BtnTransakiKirim;
    private javax.swing.JLabel Close;
    private javax.swing.JComboBox<String> ComboJenis;
    private javax.swing.JComboBox<String> ComboKaryawan;
    private javax.swing.JComboBox<String> ComboRekening;
    private javax.swing.JPanel Content;
    private javax.swing.JLabel CountCabang;
    private javax.swing.JLabel CountKaryawan;
    private javax.swing.JLabel CountNasabah;
    private javax.swing.JLabel CountRekening;
    private javax.swing.JLabel CountTransaksi;
    private javax.swing.JPanel Dasar;
    private javax.swing.JPanel Footer;
    private javax.swing.JLabel JlabelSaldo;
    private javax.swing.JLabel LblDashboard;
    private javax.swing.JLabel LblDataBank;
    private javax.swing.JLabel LblDataKaryawan;
    private javax.swing.JLabel LblDataNasabah;
    private javax.swing.JLabel LblDataRekening;
    private javax.swing.JLabel LblDataTransaksi;
    private javax.swing.JLabel LblExit;
    private javax.swing.JLabel LblFooter;
    private javax.swing.JLabel LblInfo;
    private javax.swing.JLabel LblNTabungan;
    private javax.swing.JLabel LblTambahNsb;
    private javax.swing.JPanel PnlDashboard;
    private javax.swing.JPanel PnlData;
    private javax.swing.JPanel PnlInfo;
    private javax.swing.JPanel PnlNasabah;
    private javax.swing.JPanel PnlNasabahTambah1;
    private javax.swing.JPanel PnlNasabahTambah2;
    private javax.swing.JPanel PnlNasabahTambah3;
    private javax.swing.JPanel PnlNasabahTambah4;
    private javax.swing.JPanel PnlTabungan;
    private javax.swing.JProgressBar ProgressBarTambahNasabah;
    private javax.swing.JPanel Side;
    private javax.swing.JTable TblData;
    private javax.swing.JTextField TextNamaAlamat;
    private javax.swing.JTextField TextNamaNasabah;
    private javax.swing.JTextField TextNasabahPIN;
    private javax.swing.JTextField TextNasabahSaldo;
    private javax.swing.JTextField TextNominal;
    private javax.swing.JTextField TextSearchData;
    private javax.swing.JPanel Title;
    private javax.swing.JPanel TitleBar;
    private javax.swing.JLabel TittleNasabah1;
    private javax.swing.JLabel TittleNasabah2;
    private javax.swing.JLabel TittleNasabah3;
    private javax.swing.JLabel TittleNasabah5;
    private javax.swing.JLabel TittleNasabah6;
    private javax.swing.JLabel TittleTabunga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
//NASABAH
private void GetDataNasabah(){
    try {
        DefaultTableModel tabelNasabah = new DefaultTableModel();
        tabelNasabah.addColumn("ID Nasabah");
        tabelNasabah.addColumn("Nama");
        tabelNasabah.addColumn("Alamat");
        tabelNasabah.addColumn("Nomor Rekening");
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet sql = stm.executeQuery("select ID_NASABAH,NAMA_NASABAH,ALAMAT_NASABAH,NOMOR_REKENING from nasabah");
            while (sql.next()){
                tabelNasabah.addRow(new Object[]{
                sql.getString(1),
                sql.getString(2),
                sql.getString(3),
                sql.getString(4)
            });
        }
        TblData.setModel(tabelNasabah);
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}
private void SearchDataNasabah(){
    if(TextSearchData.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Masukkan kata yang mau di cari");
        }else{        
            try {                        
                DefaultTableModel tabelNasabah = new DefaultTableModel();
                tabelNasabah.addColumn("ID Nasabah");
                tabelNasabah.addColumn("Nama");
                tabelNasabah.addColumn("Alamat");
                tabelNasabah.addColumn("Nomor Rekening");
                String data = TextSearchData.getText(); 
                Connection conn =(Connection)Koneksi.koneksiDB();
                String sqls = "select ID_NASABAH,NAMA_NASABAH,ALAMAT_NASABAH,NOMOR_REKENING from nasabah where ID_NASABAH like '%"  + data
                    + "%' or NAMA_NASABAH like '%"+ data
                    + "%'or ALAMAT_NASABAH like '%" + data 
                    + "%' or NOMOR_REKENING like '%" + data 
                    + "%';";
                java.sql.Statement stm = conn.createStatement();
                java.sql.ResultSet sql = stm.executeQuery(sqls);
                    while (sql.next()){
                        tabelNasabah.addRow(new Object[]{
                        sql.getString(1),
                        sql.getString(2),
                        sql.getString(3),
                        sql.getString(4)
                    });
                }
                TblData.setModel(tabelNasabah);
            }
            catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
            }
    }
}
private void TambahDataNasabah(){
    try {        
        Connection conn =(Connection)Koneksi.koneksiDB();
        JTextField nama = new JTextField();                
        JTextField alamat = new JTextField();  
        JComboBox<String> rekening = new JComboBox<>();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet addcombo = stm.executeQuery("SELECT r.NOMOR_REKENING FROM rekening r LEFT JOIN nasabah n ON r.NOMOR_REKENING = n.NOMOR_REKENING WHERE n.NOMOR_REKENING IS NULL");
            while (addcombo.next()){
                rekening.addItem(addcombo.getString(1));
        }
        Object[] fields = {"Nama Nasabah :", nama , "Alamat Nasabah :", alamat, "Rekening :", rekening};
        int result = JOptionPane.showConfirmDialog(null, fields, "Tambah Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {    
            String sql;
            if (rekening.getSelectedItem() != ""){
               sql = "insert into nasabah (NAMA_NASABAH,ALAMAT_NASABAH,NOMOR_REKENING) values ('"
                    + nama.getText() + "', '" + alamat.getText() + "', '" 
                    + Integer.parseInt(rekening.getSelectedItem().toString()) + "');";   
            } else {
                sql = "insert into nasabah (NAMA_NASABAH,ALAMAT_NASABAH,NOMOR_REKENING) values ('" 
                    + nama.getText() + "', '" + alamat.getText() + "', NULL);";  
            }
            
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
          
            JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
          }
       }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}

private void EditDataNasabah(){    
    int row = TblData.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang mau di hapus", "Error", JOptionPane.ERROR_MESSAGE);  
    }
    try {        
        DefaultTableModel tabelBarang = (DefaultTableModel) TblData.getModel();
        String ID = tabelBarang.getValueAt(row, 0).toString();
        String NAMA = tabelBarang.getValueAt(row, 1).toString();
        String ALAMAT = tabelBarang.getValueAt(row, 2).toString();
        String REKENING = "";
        if (tabelBarang.getValueAt(row, 3) != null){            
        REKENING = tabelBarang.getValueAt(row, 3).toString();
        }
        JTextField id = new JTextField();
        JTextField nama = new JTextField();                
        JTextField alamat = new JTextField();         
        JTextField rekening = new JTextField();
        id.setText(ID);
        id.setEditable(false);
        nama.setText(NAMA);
        alamat.setText(ALAMAT);
        rekening.setText(REKENING);
        rekening.setEditable(false);
        Object[] fields = {"ID Nasabah :", id, "Nama Nasabah :", nama , "Alamat Nasabah :", alamat, "Rekening :", rekening};
        int result = JOptionPane.showConfirmDialog(null, fields, "Edit Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {                           
            Connection conn =(Connection)Koneksi.koneksiDB();
            String sql = "update nasabah set NAMA_NASABAH = '"+ nama.getText()
                    + "', ALAMAT_NASABAH = '" + alamat.getText()
                    + "' Where ID_NASABAH = '" + ID + "';";  
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Data Berhasil Diubah Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
          }
       }
    catch (SQLException | HeadlessException e) {
       JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}

private void HapusDataNasabah(){
    int row = TblData.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang mau di hapus", "Error", JOptionPane.ERROR_MESSAGE);  
    }
    try {        
        DefaultTableModel tabelNasabah = (DefaultTableModel) TblData.getModel();
        String selected = tabelNasabah.getValueAt(row, 0).toString();
        Connection conn =(Connection)Koneksi.koneksiDB();
        String sql = "delete from nasabah WHERE ID_NASABAH = '" + selected + "';";  
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
        int jawab = JOptionPane.showOptionDialog(this, "Yakin Mau Menghapus Data Tersebut?", "Keluar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if(jawab == JOptionPane.YES_OPTION){      
                pst.execute();
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
            }
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}
//REKENING
private void GetDataRekening(){
    try {
        DefaultTableModel tabelRekening = new DefaultTableModel();
        tabelRekening.addColumn("Nomor Rekening");
        tabelRekening.addColumn("Saldo");
        tabelRekening.addColumn("Pin");
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet sql = stm.executeQuery("select NOMOR_REKENING,SALDO_REKENING,PIN from rekening");
            while (sql.next()){
                tabelRekening.addRow(new Object[]{
                sql.getString(1),
                sql.getString(2),
                sql.getString(3)
            });
        }
        TblData.setModel(tabelRekening);
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}
private void SearchDataRekening(){
    if(TextSearchData.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Masukkan kata yang mau di cari");
        }else{        
            try {                        
                DefaultTableModel tabelRekening = new DefaultTableModel();
				tabelRekening.addColumn("Nomor Rekening");
				tabelRekening.addColumn("Saldo");
				tabelRekening.addColumn("Pin");
                String data = TextSearchData.getText(); 
                Connection conn =(Connection)Koneksi.koneksiDB();
                String sqls = "select NOMOR_REKENING,SALDO_REKENING,PIN from rekening where NOMOR_REKENING like '%"+ data
                    + "%'or PIN like '%" + data 
                    + "%';";
                java.sql.Statement stm = conn.createStatement();
                java.sql.ResultSet sql = stm.executeQuery(sqls);
                    while (sql.next()){
                        tabelRekening.addRow(new Object[]{
                        sql.getString(1),
                        sql.getString(2),
                        sql.getString(3),
                    });
                }
                TblData.setModel(tabelRekening);
            }
            catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
            }
    }
}
private void TambahDataRekening(){
    try {        ;
        JTextField saldo = new JTextField();                
        JTextField pin = new JTextField();      
        Object[] fields = { "Saldo Rekening :", saldo , "PIN Rekening :",pin};
        int result = JOptionPane.showConfirmDialog(null, fields, "Tambah Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {                           
            Connection conn =(Connection)Koneksi.koneksiDB();
            String sql = "insert into rekening (SALDO_REKENING,PIN) values ('" + Integer.parseInt(saldo.getText())  + "', '"+ Integer.parseInt(pin.getText()) + "');";  
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
          
            JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
          }
       }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}

private void EditDataRekening(){    
    int row = TblData.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang mau di hapus", "Error", JOptionPane.ERROR_MESSAGE);  
    }
    try {        
        DefaultTableModel tabelBarang = (DefaultTableModel) TblData.getModel();
        String REKENING = tabelBarang.getValueAt(row, 0).toString();
        String SALDO = tabelBarang.getValueAt(row, 1).toString();
        String PIN = tabelBarang.getValueAt(row, 2).toString();
        JTextField rekening = new JTextField();
        JTextField saldo = new JTextField();                
        JTextField pin = new JTextField();    
        rekening.setText(REKENING);
        saldo.setText(SALDO);
        pin.setText(PIN);
        Object[] fields = {"Nomor Rekening :", rekening, "Saldo :", saldo , "PIN :",pin};
        int result = JOptionPane.showConfirmDialog(null, fields, "Edit Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {                           
            Connection conn =(Connection)Koneksi.koneksiDB();
            String sql = "update rekening set NOMOR_REKENING = '"  + Integer.parseInt(rekening.getText())
                    + "', SALDO_REKENING = '"+ Integer.parseInt(saldo.getText())
                    + "', PIN = '" + Integer.parseInt(pin.getText())
                    + "' Where NOMOR_REKENING = '" + REKENING + "';";  
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Data Berhasil Diubah Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
          }
       }
    catch (SQLException | HeadlessException e) {
       JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}

private void HapusDataRekening(){
    int row = TblData.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang mau di hapus", "Error", JOptionPane.ERROR_MESSAGE);  
    }
    try {        
        DefaultTableModel tabelRekening = (DefaultTableModel) TblData.getModel();
        String selected = tabelRekening.getValueAt(row, 0).toString();
        Connection conn =(Connection)Koneksi.koneksiDB();
        String sql = "delete from rekening where NOMOR_REKENING = '" + selected + "';";  
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
        int jawab = JOptionPane.showOptionDialog(this, "Yakin Mau Menghapus Data Tersebut?", "Keluar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if(jawab == JOptionPane.YES_OPTION){      
                pst.execute();
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
            }
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}
//TRANSAKSI
private void GetDataTransaksi(){
    try {
        DefaultTableModel tabelTransaksi = new DefaultTableModel();
        tabelTransaksi.addColumn("No Transaksi");
        tabelTransaksi.addColumn("No Rekening");
        tabelTransaksi.addColumn("ID Karyawan");
        tabelTransaksi.addColumn("Jenis Transaksi");
        tabelTransaksi.addColumn("Tanggal Transaksi");
        tabelTransaksi.addColumn("Jumlah");
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet sql = stm.executeQuery("select NOMOR_TRANSAKSI ,NOMOR_REKENING,ID_KARYAWAN,JENIS_TRANSAKSI,TANGGAL_TRANSAKSI,JUMLAH_TRANSAKSI from transaksi");
            while (sql.next()){
                tabelTransaksi.addRow(new Object[]{
                sql.getString(1),
                sql.getString(2),
                sql.getString(3),
                sql.getString(4),
                sql.getString(5),
                sql.getString(6)
            });
        }
        TblData.setModel(tabelTransaksi);
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}

private void SearchDataTransaksi(){
    if(TextSearchData.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Masukkan kata yang mau di cari");
        }else{        
            try {                        
                DefaultTableModel tabelTransaksi = new DefaultTableModel(); 
                tabelTransaksi.addColumn("No Transaksi");
		tabelTransaksi.addColumn("No Rekening");
		tabelTransaksi.addColumn("ID Karyawan");
		tabelTransaksi.addColumn("Jenis Transaksi");
		tabelTransaksi.addColumn("Tanggal Transaksi");
		tabelTransaksi.addColumn("Jumlah");
                String data = TextSearchData.getText(); 
                Connection conn =(Connection)Koneksi.koneksiDB();
                String sqls = "select NOMOR_TRANSAKSI ,NOMOR_REKENING,ID_KARYAWAN,JENIS_TRANSAKSI,TANGGAL_TRANSAKSI,JUMLAH_TRANSAKSI from transaksi where NOMOR_TRANSAKSI like '%"  + data
                    + "%' or NOMOR_REKENING like '%"+ data
                    + "%'or ID_KARYAWAN like '%" + data 
                    + "%' or JENIS_TRANSAKSI like '%" + data 
                    + "%';";
                java.sql.Statement stm = conn.createStatement();
                java.sql.ResultSet sql = stm.executeQuery(sqls);
                    while (sql.next()){
                        tabelTransaksi.addRow(new Object[]{
                        sql.getString(1),
                        sql.getString(2),
                        sql.getString(3),
                        sql.getString(4),
                        sql.getString(5),
                        sql.getString(6)
                    });
                }
                TblData.setModel(tabelTransaksi);
            }
            catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
            }
    }
}
private void TambahDataTransaksi(){
    try {        
        Connection conn =(Connection)Koneksi.koneksiDB();       
        JTextField jumlah = new JTextField();  
        JComboBox<String> rekening = new JComboBox<>();
        JComboBox<String> karyawan = new JComboBox<>();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet addrekening = stm.executeQuery("SELECT NOMOR_REKENING FROM rekening;");
        while (addrekening.next()){
                rekening.addItem(addrekening.getString(1));
        }
        java.sql.ResultSet addkaryawan = stm.executeQuery("SELECT ID_KARYAWAN FROM karyawan;");
        while (addkaryawan.next()){
                karyawan.addItem(addkaryawan.getString(1));
        }
        String[] items = {"Menabung", "Mengambil"};
        JComboBox<String> jenis = new JComboBox<>(items);       
        Object[] fields = {"No Rekening :", rekening, "Jenis Transaksi :", jenis, "ID Karyawan :", karyawan , "Jumlah", jumlah};
        int result = JOptionPane.showConfirmDialog(null, fields, "Tambah Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {    
            String sql = "insert into transaksi (NOMOR_REKENING,ID_KARYAWAN,JUMLAH_TRANSAKSI,JENIS_TRANSAKSI) values ('" + rekening.getSelectedItem().toString() + "', '" 
                    + karyawan.getSelectedItem().toString() + "', '" + Integer.parseInt(jumlah.getText()) + "', '" 
                    + jenis.getSelectedItem().toString() + "');";  
            JOptionPane.showMessageDialog(this, sql, "Pesan", JOptionPane.INFORMATION_MESSAGE); 
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
          
            JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE); 
           
          }
       }
    catch (SQLException | HeadlessException e) {     
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}
private void EditDataTransaksi(){    
    JOptionPane.showMessageDialog(this, "Fitur Edit tidak tersedia pada Transaksi", "Error", JOptionPane.ERROR_MESSAGE);  
}
private void HapusDataTransaksi(){
    int row = TblData.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang mau di hapus", "Error", JOptionPane.ERROR_MESSAGE);  
    }
    try {        
        DefaultTableModel tabelTransaksi = (DefaultTableModel) TblData.getModel();
        String selected = tabelTransaksi.getValueAt(row, 0).toString();
        Connection conn =(Connection)Koneksi.koneksiDB();
        String sql = "delete from transaksi WHERE NOMOR_TRANSAKSI = '" + selected + "';";  
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
        int jawab = JOptionPane.showOptionDialog(this, "Yakin Mau Menghapus Data Tersebut?", "Keluar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if(jawab == JOptionPane.YES_OPTION){      
                pst.execute();
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
            }
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}
//CABANG
private void GetDataCabang(){
    try {
        DefaultTableModel tabelCabang = new DefaultTableModel();
        tabelCabang.addColumn("ID Cabang");
        tabelCabang.addColumn("Nama Cabang");
        tabelCabang.addColumn("Alamat Cabang");
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet sql = stm.executeQuery("select ID_CABANG,NAMA_CABANG,ALAMAT_CABANG from cabang_bank");
            while (sql.next()){
                tabelCabang.addRow(new Object[]{
                sql.getString(1),
                sql.getString(2),
                sql.getString(3)
            });
        }
        TblData.setModel(tabelCabang);
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}
private void SearchDataCabang(){
    if(TextSearchData.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Masukkan kata yang mau di cari");
        }else{        
            try {                        
                DefaultTableModel tabelCabang = new DefaultTableModel();
        tabelCabang.addColumn("ID Cabang");
        tabelCabang.addColumn("Nama Cabang");
        tabelCabang.addColumn("Alamat Cabang");
                String data = TextSearchData.getText(); 
                Connection conn =(Connection)Koneksi.koneksiDB();
                String sqls = "select ID_CABANG,NAMA_CABANG,ALAMAT_CABANG from cabang_bank where ID_CABANG like '%"+ data
                    + "%'or NAMA_CABANG like '%" + data 
			+ "%'or ALAMAT_CABANG like '%" + data 
                    + "%';";
                java.sql.Statement stm = conn.createStatement();
                java.sql.ResultSet sql = stm.executeQuery(sqls);
                    while (sql.next()){
                        tabelCabang.addRow(new Object[]{
                        sql.getString(1),
                        sql.getString(2),
                        sql.getString(3),
                    });
                }
                TblData.setModel(tabelCabang);
            }
            catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
            }
    }
}
private void TambahDataCabang(){
    try {        
        JTextField id = new JTextField();
        JTextField nama = new JTextField();                
        JTextField alamat = new JTextField();      
        Object[] fields = {"ID Cabang :", id, "Nama Cabang :", nama , "Alamat Cabang :",alamat};
        int result = JOptionPane.showConfirmDialog(null, fields, "Tambah Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {                           
            Connection conn =(Connection)Koneksi.koneksiDB();
            String sql = "insert into cabang_bank (ID_CABANG,NAMA_CABANG,ALAMAT_CABANG) values ('" + id.getText().toString() + "', '" 
                    + nama.getText().toString()  + "', '"+ alamat.getText().toString() + "');";  
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
          
            JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
          }
       }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}

private void EditDataCabang(){    
    int row = TblData.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang mau di hapus", "Error", JOptionPane.ERROR_MESSAGE);  
    }
    try {        
        DefaultTableModel tabelCabang = (DefaultTableModel) TblData.getModel();
        String ID = tabelCabang.getValueAt(row, 0).toString();
        String NAMA = tabelCabang.getValueAt(row, 1).toString();
        String ALAMAT = tabelCabang.getValueAt(row, 2).toString();
        JTextField id = new JTextField();
        JTextField nama = new JTextField();                
        JTextField alamat = new JTextField();    
        id.setText(ID);
        nama.setText(NAMA);
        alamat.setText(ALAMAT);
        Object[] fields = {"ID Cabang :", id, "Nama Cabang :", nama , "Alamat Cabang :",alamat};
        int result = JOptionPane.showConfirmDialog(null, fields, "Edit Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {                           
            Connection conn =(Connection)Koneksi.koneksiDB();
            String sql = "update cabang_bank set ID_CABANG = '"  + id.getText()
                    + "', NAMA_CABANG = '"+ nama.getText()
                    + "', ALAMAT_CABANG = '" + alamat.getText()
                    + "' Where ID_CABANG = '" + ID + "';";  
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Data Berhasil Diubah Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
          }
       }
    catch (SQLException | HeadlessException e) {
       JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}

private void HapusDataCabang(){
    int row = TblData.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang mau di hapus", "Error", JOptionPane.ERROR_MESSAGE);  
    }
    try {        
        DefaultTableModel tabelCabang = (DefaultTableModel) TblData.getModel();
        String selected = tabelCabang.getValueAt(row, 0).toString();
        Connection conn =(Connection)Koneksi.koneksiDB();
        String sql = "delete from cabang_bank where ID_CABANG = '" + selected + "';";  
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
        int jawab = JOptionPane.showOptionDialog(this, "Yakin Mau Menghapus Data Tersebut?", "Keluar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if(jawab == JOptionPane.YES_OPTION){      
                pst.execute();
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
            }
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}
//KARYAWAN
private void GetDataKaryawan(){
    try {
        DefaultTableModel tabelKaryawan = new DefaultTableModel();
        tabelKaryawan.addColumn("ID Karyawan");
        tabelKaryawan.addColumn("Nama Karyawan");
        tabelKaryawan.addColumn("Alamat Karyawan");
        tabelKaryawan.addColumn("ID Cabang");
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet sql = stm.executeQuery("select ID_KARYAWAN,NAMA_KARYAWAN,ALAMAT_KARYAWAN,ID_CABANG from karyawan");
            while (sql.next()){
                tabelKaryawan.addRow(new Object[]{
                sql.getString(1),
                sql.getString(2),
                sql.getString(3),
                sql.getString(4)
            });
        }
        TblData.setModel(tabelKaryawan);
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}
private void SearchDataKaryawan(){
    if(TextSearchData.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Masukkan kata yang mau di cari");
        }else{        
            try {                        
                DefaultTableModel tabelKaryawan = new DefaultTableModel();
        tabelKaryawan.addColumn("ID Karyawan");
        tabelKaryawan.addColumn("Nama Karyawan");
        tabelKaryawan.addColumn("Alamat Karyawan");
        tabelKaryawan.addColumn("ID Cabang");
                String data = TextSearchData.getText(); 
                Connection conn =(Connection)Koneksi.koneksiDB();
                String sqls = "select ID_KARYAWAN,NAMA_KARYAWAN,ALAMAT_KARYAWAN,ID_CABANG from karyawan where ID_KARYAWAN like '%"+ data
                    + "%'or NAMA_KARYAWAN like '%" + data 
			+ "%'or ALAMAT_KARYAWAN like '%" + data 
			+ "%'or ID_CABANG like '%" + data 
                    + "%';";
                java.sql.Statement stm = conn.createStatement();
                java.sql.ResultSet sql = stm.executeQuery(sqls);
                    while (sql.next()){
                        tabelKaryawan.addRow(new Object[]{
                        sql.getString(1),
                        sql.getString(2),
                        sql.getString(3),
                        sql.getString(4),
                    });
                }
                TblData.setModel(tabelKaryawan);
            }
            catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
            }
    }
}
private void TambahDataKaryawan(){
    try {        
        JTextField nama = new JTextField();                
        JTextField alamat = new JTextField();      
        JComboBox<String> cabang = new JComboBox<>();
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet addcombo = stm.executeQuery("SELECT ID_CABANG FROM cabang_bank;");
            while (addcombo.next()){
                cabang.addItem(addcombo.getString(1));
        }
        Object[] fields = {"Nama Karyawan :", nama , "Alamat Karyawan :",alamat, "ID Cabang :",cabang};
        int result = JOptionPane.showConfirmDialog(null, fields, "Tambah Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {                
            String sql = "insert into karyawan (NAMA_KARYAWAN,ALAMAT_KARYAWAN,ID_CABANG) values ('"
                    + nama.getText().toString()  + "', '"+ alamat.getText().toString() + "', '"+ cabang.getSelectedItem().toString() + "');";  
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
          
            JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
          }
       }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}

private void EditDataKaryawan(){    
    int row = TblData.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang mau di hapus", "Error", JOptionPane.ERROR_MESSAGE);  
    }
    try {       
        DefaultTableModel tabelKaryawan = (DefaultTableModel) TblData.getModel();
        String ID = tabelKaryawan.getValueAt(row, 0).toString();
        String NAMA = tabelKaryawan.getValueAt(row, 1).toString();
        String ALAMAT = tabelKaryawan.getValueAt(row, 2).toString();
        String CABANG = tabelKaryawan.getValueAt(row, 3).toString();
        JTextField id = new JTextField();
        JTextField nama = new JTextField();                
        JTextField alamat = new JTextField();  
	JComboBox<String> cabang = new JComboBox<>();
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet addcombo = stm.executeQuery("SELECT ID_CABANG FROM cabang_bank;");
            while (addcombo.next()){
                cabang.addItem(addcombo.getString(1));
        }		
        id.setText(ID);
        id.setEditable(false);
        nama.setText(NAMA);
        alamat.setText(ALAMAT);
        cabang.setSelectedItem(CABANG);
        Object[] fields = {"ID Karyawan :", id, "Nama Karyawan :", nama , "Alamat Karyawan :",alamat , "ID Cabang :",cabang};
        int result = JOptionPane.showConfirmDialog(null, fields, "Edit Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {                   
            String sql = "update karyawan set NAMA_KARYAWAN = '"+ nama.getText()
                    + "', ALAMAT_KARYAWAN = '" + alamat.getText()
                    + "', ALAMAT_KARYAWAN = '" + alamat.getText().toString()
                    + "' Where ID_KARYAWAN = '" + ID + "';";  
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Data Berhasil Diubah Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
          }
       }
    catch (SQLException | HeadlessException e) {
       JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}

private void HapusDataKaryawan(){
    int row = TblData.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang mau di hapus", "Error", JOptionPane.ERROR_MESSAGE);  
    }
    try {        
        DefaultTableModel tabelKaryawan = (DefaultTableModel) TblData.getModel();
        String selected = tabelKaryawan.getValueAt(row, 0).toString();
        Connection conn =(Connection)Koneksi.koneksiDB();
        String sql = "delete from karyawan where ID_KARYAWAN = '" + selected + "';";  
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
        int jawab = JOptionPane.showOptionDialog(this, "Yakin Mau Menghapus Data Tersebut?", "Keluar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if(jawab == JOptionPane.YES_OPTION){      
                pst.execute();
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus Di Database", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
            }
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);  
    }
}


private void NasabahBuat(){
    ProgressBarTambahNasabah.setValue(0);
    String key = "";
    try {        
    Connection conn =(Connection)Koneksi.koneksiDB();
    String sql = "insert into rekening (SALDO_REKENING,PIN) values ('" + Integer.parseInt(TextNasabahSaldo.getText().toString())  + "', '"+ Integer.parseInt(TextNasabahPIN.getText()) + "');";  
    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
    pst.execute();
    ProgressBarTambahNasabah.setValue(35);
    java.sql.Statement stm = conn.createStatement();
    java.sql.ResultSet rs = stm.executeQuery("SELECT r.NOMOR_REKENING FROM rekening r LEFT JOIN nasabah n ON r.NOMOR_REKENING = n.NOMOR_REKENING WHERE n.NOMOR_REKENING IS NULL");
    while (rs.next()){
        key = rs.getString(1).toString();
    }
    ProgressBarTambahNasabah.setValue(65);
    String sql2 = "insert into nasabah (NAMA_NASABAH,ALAMAT_NASABAH,NOMOR_REKENING) values ('"
                    + TextNamaNasabah.getText() + "', '" + TextNamaAlamat.getText() + "', '" 
                    + key + "');";   
    java.sql.PreparedStatement pst2 = conn.prepareStatement(sql2);
    pst2.execute();    
    ProgressBarTambahNasabah.setValue(98);
    TextNamaNasabah.setText("");
    TextNamaAlamat.setText("");
    JlabelSaldo.setText("");
    TextNasabahPIN.setText("");
    ProgressBarTambahNasabah.setValue(100);
    PnlNasabahTambah1.setVisible(false);
    PnlNasabahTambah2.setVisible(false);
    PnlNasabahTambah3.setVisible(false);
    PnlNasabahTambah4.setVisible(true);    
    }
    catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, "Terjadi Error Coba Cek Data Kembali", "Error", JOptionPane.ERROR_MESSAGE);                    
        PnlNasabahTambah1.setVisible(true);
        PnlNasabahTambah2.setVisible(false);
        PnlNasabahTambah3.setVisible(false);
        PnlNasabahTambah4.setVisible(false);
    }
}
private void Count(){
    try {
        String CntNasabah = "0", CntRekening = "0",CntCabang = "0",CntKaryawan = "0",CntTransaksi = "0";
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();
        String countN = "SELECT COUNT(*) FROM nasabah";        
        String countR = "SELECT COUNT(*) FROM rekening";
        String countC = "SELECT COUNT(*) FROM cabang_bank";
        String countK = "SELECT COUNT(*) FROM karyawan";        
        String countT = "SELECT COUNT(*) FROM transaksi";
        java.sql.ResultSet countN2 = stm.executeQuery(countN);
        if(countN2.next()) { 
            CntNasabah = countN2.getString(1); 
        }
        java.sql.ResultSet countR2 = stm.executeQuery(countR);
        if(countR2.next()) { 
            CntRekening = countR2.getString(1); 
        }
        java.sql.ResultSet countC2 = stm.executeQuery(countC);
        if(countC2.next()) { 
            CntCabang = countC2.getString(1); 
        }
        java.sql.ResultSet countK2 = stm.executeQuery(countK);
        if(countK2.next()) { 
            CntKaryawan = countK2.getString(1); 
        }
        java.sql.ResultSet countT2 = stm.executeQuery(countT);
        if(countT2.next()) { 
            CntTransaksi = countT2.getString(1); 
        }
        CountNasabah.setText(CntNasabah);
        CountRekening.setText(CntRekening);
        CountCabang.setText(CntCabang);
        CountKaryawan.setText(CntKaryawan);
        CountTransaksi.setText(CntTransaksi);
    } catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE); 
    }
}
private void ComboTabungan(){
    try {
        ComboRekening.removeAllItems();
        ComboKaryawan.removeAllItems();
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();     
        String countR = "SELECT NOMOR_REKENING FROM rekening";
        String countK = "SELECT ID_KARYAWAN FROM karyawan";
        java.sql.ResultSet countR2 = stm.executeQuery(countR);
        while (countR2.next()) { 
            ComboRekening.addItem(countR2.getString(1));
        }
        java.sql.ResultSet countK2 = stm.executeQuery(countK);
        while (countK2.next()) { 
            ComboKaryawan.addItem(countK2.getString(1));
        }	
    } catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE); 
    }
}
private void KirimTabungan(){
    try {
        Connection conn =(Connection)Koneksi.koneksiDB();
        java.sql.Statement stm = conn.createStatement();     
        String sql = "insert into transaksi (NOMOR_REKENING,ID_KARYAWAN,JUMLAH_TRANSAKSI,JENIS_TRANSAKSI) values ('" + ComboRekening.getSelectedItem().toString() + "', '" 
                    + ComboKaryawan.getSelectedItem().toString() + "', '" + Integer.parseInt(TextNominal.getText()) + "', '" 
                    + ComboJenis.getSelectedItem().toString() + "');";  
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
        pst.execute();
        JOptionPane.showMessageDialog(this, "Transaksi Berhasil", "Pesan", JOptionPane.INFORMATION_MESSAGE);  
    } catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE); 
    }
}
//END
}
